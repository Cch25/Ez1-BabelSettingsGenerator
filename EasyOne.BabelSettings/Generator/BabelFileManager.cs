using EasyOne.BabelSettings;
using System;
using System.Diagnostics;
using System.IO;
using System.Reflection;

namespace Generator
{
    internal class BabelFileManager
    {
        internal string ReadFile()
        {
            string path = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            if (!Directory.Exists($"{path}/Generator"))
            {
                throw new Exception("Sorry, I could not find Generator folder in your solution.");
            }
            Console.WriteLine("Reading your input file.");
            return File.ReadAllText($"{path}/Generator/Input.cs");
        }

        internal void WriteFile(string json, Arguments arguments)
        {
            string path = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            if (!Directory.Exists($"{path}/Generator/AutoGenerated"))
            {
                Directory.CreateDirectory($"{path}/Generator/AutoGenerated");
            }
            File.WriteAllText($"{path}/Generator/AutoGenerated/{arguments.SettingsCode}-{arguments.Language}.json", json);
            Console.WriteLine("Json successfully created.");
        }

        internal void OpenFile(Arguments arguments)
        {
            Console.Write($"Would you like to review the file ({arguments.SettingsCode}-{arguments.Language}.json)? (y/n): ");

            ConsoleKeyInfo key = Console.ReadKey();
            if (key.KeyChar.ToString().Equals("y", StringComparison.OrdinalIgnoreCase))
            {
                Console.WriteLine("\nShowing your file.");
                string executableLocation = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
                Process process = new Process
                {
                    StartInfo = new ProcessStartInfo()
                    {
                        Arguments = $"{executableLocation }/Generator/AutoGenerated/{arguments.SettingsCode}-{arguments.Language}.json",
                        FileName = "notepad.exe"
                    }
                };
                process.Start();
                process.WaitForExit();
            }
            else
            {
                Console.WriteLine("\nOk.");
            }
        }
    }
}
